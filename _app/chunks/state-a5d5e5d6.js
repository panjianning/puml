var b=Object.defineProperty,k=Object.defineProperties;var v=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var _=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var m=(t,e,s)=>e in t?b(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,a=(t,e)=>{for(var s in e||(e={}))_.call(e,s)&&m(t,s,e[s]);if(u)for(var s of u(e))L.call(e,s)&&m(t,s,e[s]);return t},o=(t,e)=>k(t,v(e));import{D as f,L as N,M as O,N as w,O as A,P as T,Q as D,R as C,T as E,U as z,V as c}from"./vendor-72432615.js";import{_ as g}from"./preload-helper-427fc039.js";const J={loading:!1},p=f(J),H=async(t,e)=>{p.set({loading:!0,message:t});const s=await e;return p.set({loading:!1}),s};let l;const M=async()=>{if(!l)try{const{Analytics:t}=await g(()=>import("./analytics.browser.es-3a37d114.js"),[]),e=await g(()=>import("./analytics-plugin-ga.browser.es-1cdb0512.js"),[]);l=t({app:"mermaid-live-editor",plugins:[e.init({trackingId:"UA-153180559-1"})]})}catch{console.info("Analytics blocked ;)")}},R=t=>t.replace(/^\s*%%.*\n/g,`
`).trimStart().split(" ")[0];let y;const j=t=>{l&&(clearTimeout(y),y=setTimeout(function(){const e=R(t);console.debug("ga:","send","event","render",e),l.track("render",{graphType:e})},5e3))},U={serialize:t=>T(t,!0),deserialize:t=>D(t)},P={serialize:t=>{const e=new TextEncoder().encode(t),s=O(e,{level:9});return N(s,!0)},deserialize:t=>{const e=w(t);return A(e,{to:"string"})}},d={base64:U,pako:P},I=t=>{const e=JSON.stringify(t),s="pako",n=d[s].serialize(e);return`${s}:${n}`},B=t=>{let e,s;if(t.includes(":")){let r;if([r,s]=t.split(":"),r in d)e=r;else throw new Error(`Unknown serde type: ${r}`)}else e="base64",s=t;const n=d[e].deserialize(s);return JSON.parse(n)},$={code:`Bob->Alice : dummy
Bob<--Alice : dummy
  `,mermaid:JSON.stringify({theme:"default"},null,2),updateEditor:!1,autoSync:!0,updateDiagram:!0},x=`graph TD
    A[Loading URL failed. We can try to figure out why.] -->|Decode JSON| B(Please check the console to see the JSON and error details.)
    B --> C{Is the JSON correct?}
    C -->|Yes| D(Please Click here to Raise an issue in github.<br/>Including the broken link in the issue <br/> will speed up the fix.)
    C -->|No| E{Did someone <br/>send you this link?}
    E -->|Yes| F[Ask them to send <br/>you the complete link]
    E -->|No| G{Did you copy <br/> the complete URL?}
    G --> |Yes| D
    G --> |"No :("| H(Try using the Timeline tab in History <br/>from same browser you used to create the diagram.)
    click D href "https://github.com/mermaid-js/mermaid-live-editor/issues/new?assignees=&labels=bug&template=bug_report.md&title=Broken%20link" "Raise issue"`,i=C(f($),E(),"plantumlCodeStore"),G=z([i],([t],e)=>{e(I(t))}),Q=t=>{let e;console.log("Loading",t);try{e=B(t),console.log(e);const s=typeof e.mermaid=="string"?JSON.parse(e.mermaid):e.mermaid;s.securityLevel&&s.securityLevel!=="strict"&&confirm(`Removing "securityLevel":"${s.securityLevel}" from the config for safety.
Click Cancel if you trust the source of this Diagram.`)&&delete s.securityLevel,e.mermaid=JSON.stringify(s,null,2)}catch(s){e=c(i),t&&(console.error("Init error",s),e.code=x)}h(o(a({},e),{updateEditor:!0}))},h=t=>{i.update(e=>a(a({},e),t))};let S=!1;const W=(t,e,s=!1)=>{if(j(t),(t.match(/\n/g)||"").length+1>50&&!S&&c(i).autoSync){const r=confirm("Long diagram detected. Turn off Auto Sync? Click the sync logo to manually sync.");S=!0,r&&h({autoSync:!1})}i.update(r=>o(a({},r),{code:t,updateEditor:e,updateDiagram:s}))},q=(t,e)=>{i.update(s=>o(a({},s),{mermaid:t,updateEditor:e}))},K=t=>{i.update(e=>{const s=JSON.parse(e.mermaid);return(!s.theme||["dark","default"].includes(s.theme))&&(s.theme=t?"dark":"default"),o(a({},e),{mermaid:JSON.stringify(s,null,2),updateEditor:!0})})},X=()=>{G.subscribe(t=>{history.replaceState(void 0,void 0,`#${t}`)})},Z=()=>JSON.stringify(c(i));export{l as a,q as b,i as c,B as d,$ as e,h as f,Z as g,X as h,H as i,M as j,Q as k,p as l,G as s,K as t,W as u};
